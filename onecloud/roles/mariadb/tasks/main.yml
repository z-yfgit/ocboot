---
- name: gather os specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "{{ ansible_distribution|lower }}-{{ ansible_distribution_version|lower|replace('/', '_') }}.yml"
        - "{{ ansible_distribution|lower }}-{{ ansible_distribution_release|lower }}.yml"
        - "{{ ansible_distribution|lower }}-{{ ansible_distribution_major_version|lower|replace('/', '_') }}.yml"
        - "{{ ansible_distribution|lower }}.yml"
        - "{{ ansible_os_family|lower }}.yml"
      paths:
        - ../../mariadb/vars
      skip: true
  tags:
    - facts

- name: Install mariadb
  package:
    name: "{{ item }}"
    state: present
  failed_when: false
  loop: "{{ mariadb_package_info.pkgs }}"

- name: copy my.cnf
  template:
    src: my.cnf.j2
    dest: /etc/my.cnf

- name: start mariadb
  systemd:
    name: mariadb
    enabled: yes
    state: started


- name: mariadb config hack
  shell: |
    if [ ! -d /etc/my.cnf.d ] && [ -d /etc/mysql ]; then
      ln -sf /etc/mysql /etc/my.cnf.d
    fi
    if [ -f /etc/mysql/mariadb.conf.d/50-server.cnf ] && grep -qP 'bind-address *= *127.0.0.1' /etc/mysql/mariadb.conf.d/50-server.cnf; then
      cp -vf /etc/mysql/mariadb.conf.d/50-server.cnf /etc/mysql/mariadb.conf.d/50-server.cnf.$(date +"%Y%m%d-%H%M%S").bak
      sed -i 's#bind-address *= *127.0.0.1#bind-address = 0.0.0.0#' /etc/mysql/mariadb.conf.d/50-server.cnf
    fi
    systemctl restart mariadb
  args:
    executable: /bin/bash

- name: Change root password
  mysql_user:
    name: "{{ db_user }}"
    password: "{{ db_password }}"
  ignore_errors: yes
  failed_when: false

- name: Allow remote root access with grant priv with raw mysql
  shell: mysql -u {{ db_user }} -p{{ db_password }} -e 'grant all privileges on *.* to `{{ db_user }}`@`%` identified by "{{ db_password }}" with grant option; FLUSH PRIVILEGES;'
  args:
    executable: /bin/bash

- name: Remove all anonymous user accounts
  mysql_user:
    name: ''
    host_all: yes
    state: absent
    login_user: "{{ db_user }}"
    login_password: "{{ db_password }}"

- name: Remove test database
  mysql_db:
    name: test
    state: absent
    login_user: "{{ db_user }}"
    login_password: "{{ db_password }}"

- when: groups['mariadb_ha_nodes'] | length > 1
  include_tasks: 05ha.yml
